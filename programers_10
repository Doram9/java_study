import java.util.Arrays;
class Solution {
    public int solution(int[] people, int limit) {
        int answer = 0;
/*      for (int i = 0; i < people.length; i++) {      //체중 오름차순 정렬
         for (int j = i + 1; j < people.length; j++) {
            if (people[i] > people[j]) {
               int tmp = people[i];
               people[i] = people[j];
               people[j] = tmp;
            }
         }
      }*/
        Arrays.sort(people);
        int min = 0;
        for (int max = people.length - 1; min <= max; max--){
            if (people[min] + people[max] <= limit) min++;
            answer++;
        }
/*      for (int i = people.length - 1; i >= 0; i--) {//뚱뚱한 사람부터 검색
          if(people[i] == 0) continue;
          int sum = limit - people[i]; //남은 보트 무게 sum 은 보트제한 무게 - i번째 뚱뚱한 사람 무게
          for(int j = 0; j <= i; j++) { //가벼운 사람부터 검색 //마지막사람은 이 for문을 안거침
              if(people[j] == 0) continue;
              if(j == i) {
                  answer++;
                  break;
              }
              if(sum < people[j]) { //남은 보트 무게가 j번째 가벼운 사람을 못 태울 경우
                  answer++; // 보트 추가
                  break; //다음 뚱뚱한 사람 검색으로 이동
              }
              else if(sum > people[j]) { // 남은 보트무게 가 j번째 가벼운 사람보다 클 경우
                      sum = sum - people[j]; // j번째 사람을 태우고
                      people[j] = 0; // j번째 사람의 무게를 0으로 만들어서 없앰.
                      continue;
                  }
                else if(sum == people[j]) { //남은 보트무게와 j번째 가벼운 사람의 무게가 같을 경우
                      people[j] = 0; //j번째 사람의 무게를 0으로 만들어 없앰.
                      answer++; //i번째로 뚱뚱한 사람과 j번째로 가벼운 사람들을 한 보트에 묶음.
                      break;
                }
          }
      }*/
        return answer;
    }
}
